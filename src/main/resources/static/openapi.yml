openapi: 3.0.1

info:
  title: GMakers-Server API 명세서
  description: GMakers-Server API 명세서
  contact:
    name: JiHun & SungJun
    email: znftm93@gmail.com
  version: 1.0.0

servers:
  - url: http://localhost:8080/api
    description: local
  - url: http://52.79.197.237:8080/api
    description: dev

tags:
  - name: Account
    description: Account resource

paths:
  /accounts/sign-up:
    post:
      summary: 회원가입
      tags:
        - Account
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/SignUpDto'
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: string
                writeOnly: true
                example: signUp success

        '400':
          description: 회원가입 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'


  /accounts/sign-in:
    post:
      summary: 로그인
      tags:
        - Account
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/SignInDto'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
        '400':
          description: 로그인 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

components:
  schemas:
    ExceptionDetailResponse:
      type: object
      readOnly: true
      properties:
        field:
          type: string
        value:
          type: string
        reason:
          type: string
    ExceptionResponse:
      type: object
      readOnly: true
      properties:
        message:
          type: string
        status:
          type: string
        errors:
          $ref: '#/components/schemas/ExceptionDetailResponse'
    ExceptionResponseInfo:
      type: object
      readOnly: true
      properties:
        message:
          type: string
        status:
          type: string
    SignUpDto:
      type: object
      writeOnly: true
      properties:
        username:
          type: string
          maxLength: 20
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,20}$
          example: opgg
        password:
          type: string
          maxLength: 20
          minLength: 8
          pattern: ^[A-Za-z0-9]{8,20}$
          example: opggmobile!
    SignInDto:
      type: object
      writeOnly: true
      properties:
        username:
          type: string
          maxLength: 20
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,20}$
          example: opgg
        password:
          type: string
          maxLength: 20
          minLength: 8
          pattern: ^[A-Za-z0-9]{8,20}$
          example: opggmobile!
    SignInResponse:
      type: object
      writeOnly: true
      properties:
        token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJvnGdnIiwic3ViIjoiMSIsImV4cCI6MTYyODQzMTMwNCwiaWF0IjoxNjI4NDI5NTA0LCJhdXRoIjoiUk9MRV9VU0VSIn0.qRWiKpHKBF13M7Tw485NaDPveVF2iRh9vZ39YRJvItW16ikg7pHmmP3QwEzc732TPntruhgWzny-VrOBBk8LWA
    TokenDto:
      type: object
      readOnly: true
      properties:
        token:
          type: string

  responses:
    '400':
      description: Bad Request
    '401':
      description: Unauthorized
    '403':
      description: Forbidden
    '404':
      description: Not Found
    '500':
      description: Internal Server Error
