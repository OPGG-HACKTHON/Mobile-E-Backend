openapi: 3.0.1

info:
  title: GMakers-Server API 명세서
  description: GMakers-Server API 명세서
  contact:
    name: JiHun & SungJun
    email: znftm93@gmail.com
  version: 1.0.0

servers:
  - url: http://localhost:8080/api
    description: local
  - url: http://52.79.197.237:8080/api
    description: prod

tags:
  - name: Account
    description: Account resource

paths:
  ### ChampionInfo ###
  /champion-info:
    get:
      summary: 챔피언 이름과 id값 목록
      tags:
        - ChampionInfo
      responses:
        '200':
          description: 성공

  ### Account ###
  /accounts/sign-up:
    post:
      summary: 회원가입
      tags:
        - Account
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: string
                writeOnly: true
                example: signUp success
        '400':
          description: 회원가입 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /accounts/sign-in:
    post:
      summary: 로그인
      tags:
        - Account
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
        '400':
          description: 로그인 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  ### Profile ###
  /profiles:
    post:
      summary: 프로필 생성
      tags:
        - Profile
      requestBody:
        description: summonerName = LoL 소환사명
        required: true
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/ProfileCreateRequest'
      responses:
        '200':
          description: 프로필 생성 성공
          content:
            application/json:
              schema:
                type: string
                writeOnly: true
                example: create profile
        '400':
          description: 프로필 생성 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

    get:
      summary: 프로필 메인 정보 조회
      tags:
        - Profile
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFindResponse'

  /profiles/auth:
    patch:
      summary: 프로필 인증
      tags:
        - Profile
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/ProfileAuthRequest'
      responses:
        '200':
          description: 랜덤 프로필 아이콘 아이디 값
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAuthResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /profiles/auth-confirm:
    patch:
      summary: 프로필 인증 확인
      tags:
        - Profile
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/ProfileAuthRequest'
      responses:
        '200':
          description: 인증 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAuthConfirmResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

components:
  schemas:
    ### Exception ###
    ExceptionDetailResponse:
      type: object
      readOnly: true
      properties:
        field:
          type: string
        value:
          type: string
        reason:
          type: string
    ExceptionResponse:
      type: object
      readOnly: true
      properties:
        message:
          type: string
        status:
          type: string
        errors:
          $ref: '#/components/schemas/ExceptionDetailResponse'

    ### Account ###
    SignUpRequest:
      type: object
      writeOnly: true
      properties:
        username:
          type: string
          maxLength: 20
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,20}$
          example: opgg
        password:
          type: string
          maxLength: 20
          minLength: 8
          pattern: ^[A-Za-z0-9]{8,20}$
          example: opggmobile!
    SignInRequest:
      type: object
      writeOnly: true
      properties:
        username:
          type: string
          maxLength: 20
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,20}$
          example: opgg
        password:
          type: string
          maxLength: 20
          minLength: 8
          pattern: ^[A-Za-z0-9]{8,20}$
          example: opggmobile!
    SignInResponse:
      type: object
      writeOnly: true
      properties:
        token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJvnGdnIiwic3ViIjoiMSIsImV4cCI6MTYyODQzMTMwNCwiaWF0IjoxNjI4NDI5NTA0LCJhdXRoIjoiUk9MRV9VU0VSIn0.qRWiKpHKBF13M7Tw485NaDPveVF2iRh9vZ39YRJvItW16ikg7pHmmP3QwEzc732TPntruhgWzny-VrOBBk8LWA

    ### Profile ###
    ProfileCreateRequest:
      type: object
      writeOnly: true
      properties:
        summonerName:
          type: string
          example: Hide on bush
        preferChampions:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: integer
          example:
            - priority: 1
              cahmpionId: 10
            - priority: 2
              cahmpionId: 13
        preferLines:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
          example:
            - priority: 1
              line: TOP
            - priority: 2
              line: AD
    ProfileAuthRequest:
      type: object
      writeOnly: true
      properties:
        summonerId:
          type: string
          example: c4ef16ITFOMN9FGfdphixlp8-vSDIOUgsadQqXz2zO9KMO9XqzzHs9_EQ2
    ProfileAuthResponse:
      type: object
      writeOnly: true
      properties:
        iconId:
          type: string
          example: 5
    ProfileAuthConfirmResponse:
      type: object
      writeOnly: true
      properties:
        isCertified:
          type: boolean
          example: true
    ProfileFindResponse:
      type: object
      writeOnly: true
      properties:
        accountId:
          type: integer
          example: 1
        username:
          type: string
          example: "testtest"
        profileId:
          type: integer
          example: 1
        isCertified:
          type: boolean
          example: true
        summonerAccountId:
          type: integer
          example: 1
        profileIconId:
          type: integer
          example: 21
        summonerId:
          type: string
          example: YLhKPSfcrbAGV4_oiKMt6ZLlAC7dITdXxBUtxkStn9qH5GU
        summonerName:
          type: string
          example: Hide on bush
        preferQueue:
          type: string
          example: RANKED_SOLO
        level:
          type: integer
          example: 544
        queue:
          type: string
          example: RANKED_FLEX
        tier:
          type: string
          example: GOLD
        tierLevel:
          type: integer
          example: 3
        line:
          type: string
          example: MID
        priority:
          type: integer
          example: 1

  responses:
    '400':
      description: Bad Request
    '401':
      description: Unauthorized
    '403':
      description: Forbidden
    '404':
      description: Not Found
    '500':
      description: Internal Server Error
